def project = [:]
project.network   = 'hmpps-delius-network-terraform'
project.dcore     = 'hmpps-delius-core-terraform'
project.mis       = 'hmpps-mis-terraform-repo'
project.config    = 'hmpps-env-configs'

def prepare_env() {
    sh '''
    #!/usr/env/bin bash
    docker pull mojdigitalstudio/hmpps-terraform-builder:latest
    '''
}

def plan_submodule(config_dir, env_name, git_project_dir, setuptype, submodule_name) {
    wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
        sh """
        #!/usr/env/bin bash
        echo "TF PLAN for ${env_name} | ${submodule_name} - component from git project ${git_project_dir}"
        set +e
        cp -R -n "${config_dir}" "${git_project_dir}/env_configs"
        cd "${git_project_dir}"
        docker run --rm \
        -v `pwd`:/home/tools/data \
        -v ~/.aws:/home/tools/.aws mojdigitalstudio/hmpps-terraform-builder \
        bash -c "\
            source env_configs/${env_name}/${env_name}.properties; \
            echo $submodule_name | grep -q ec2-ndl && cd ${setuptype}${submodule_name} || cd ${submodule_name}; \
            if [ -d .terraform ]; then rm -rf .terraform; fi; sleep 5; \
            terragrunt init; \
            terragrunt plan > tf.plan.out; \
            exitcode=\\\"\\\$?\\\"; \
            cat tf.plan.out; \
            if [ \\\"\\\$exitcode\\\" == '1' ]; then exit 1; fi; \
            parse-terraform-plan -i tf.plan.out | jq '.changedResources[] | (.action != \\\"update\\\") or (.changedAttributes | to_entries | map(.key != \\\"tags.source-hash\\\") | reduce .[] as \\\$item (false; . or \\\$item))' | jq -e -s 'reduce .[] as \\\$item (false; . or \\\$item) == false'" \
            || exitcode="\$?"; \
            echo "\$exitcode" > plan_ret; \
            if [ "\$exitcode" == '1' ]; then exit 1; else exit 0; fi
        set -e
        """
        return readFile("${git_project_dir}/plan_ret").trim()
    }
}

pipeline {

    agent { label "jenkins_slave" }

    stages {

        stage('setup') {
            steps {
                dir( project.mis ) {
                  git url: 'git@github.com:ministryofjustice/' + project.mis, branch: 'issue_84_add_ses_smtp_to_pipeline', credentialsId: 'f44bc5f1-30bd-4ab9-ad61-cc32caf1562a'
                }
                dir( project.config ) {
                  git url: 'git@github.com:ministryofjustice/' + project.config, branch: 'master', credentialsId: 'f44bc5f1-30bd-4ab9-ad61-cc32caf1562a'
                }

                prepare_env()
            }
        }

        stage('Delius | MIS Common')           { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'common')}}}
        stage('Delius | MIS Certs')            { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'certs')}}}
        stage('Delius | MIS s3buckets')        { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 's3buckets')}}}
        stage('Delius | MIS iam')              { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'iam')}}}
        stage('Delius | MIS security-groups')  { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'security-groups')}}}
        stage('Delius | MIS ses')              { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ses')}}}
        stage('Delius | MIS smtp-server')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'smtp-server')}}}
        stage('Delius | MIS ec2-ndl-dis')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ec2-ndl-dis')}}}
        stage('Delius | MIS ec2-ndl-bcs')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ec2-ndl-bcs')}}}
        stage('Delius | MIS ec2-ndl-bfs')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ec2-ndl-bfs')}}}
        stage('Delius | MIS ec2-ndl-bps')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ec2-ndl-bps')}}}
        stage('Delius | MIS ec2-ndl-bws')      { steps { script {plan_submodule(project.config, environment_name, project.mis, setuptype, 'ec2-ndl-bws')}}}
    }

    post {
        always {
            deleteDir()
        }
    }

}
